/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import cpn.Cpn;
import cpn.Stats;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileFilter;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.xpath.XPathExpressionException;
import kettel.conversion.ConversionFactory;
import org.xml.sax.SAXException;
import xml.XMLBuilder;
import xml.XMLFactory;
import xml.XMLParser;

/**
 *
 * @author hmg
 */
public class Main extends javax.swing.JFrame {

    private XMLFactory xmlFactory;
    private Cpn cpn;

    /**
     * Creates new form main
     *
     * @throws javax.xml.parsers.ParserConfigurationException
     */
    public Main() throws ParserConfigurationException {
        initComponents();

        this.setLocationRelativeTo(null);
        this.setMinimumSize(new Dimension(475, 375));
        this.generateLabel.setText("");
        this.openLabel.setText("");
        this.debug.setText("");
        this.debug.setEditable(false);

        this.btnGenerate.setEnabled(false);

        openFile.setAcceptAllFileFilterUsed(false);

        this.xmlFactory = XMLFactory.newInstance();
        this.cpn = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        saveFile = new javax.swing.JFileChooser();
        openFile = new javax.swing.JFileChooser();
        openPanel = new javax.swing.JPanel();
        openLabel = new javax.swing.JLabel();
        btnOpen = new javax.swing.JButton();
        generatePanel = new javax.swing.JPanel();
        btnGenerate = new javax.swing.JButton();
        generateLabel = new javax.swing.JLabel();
        outputPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        debug = new javax.swing.JTextArea();

        saveFile.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);
        saveFile.setDialogTitle("Open file ...");
        saveFile.setFileFilter(null);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("cpn2etl");

        openPanel.setLayout(new java.awt.GridBagLayout());

        openLabel.setText("sdfsd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        openPanel.add(openLabel, gridBagConstraints);

        btnOpen.setText("Open");
        btnOpen.setMaximumSize(new java.awt.Dimension(99, 29));
        btnOpen.setMinimumSize(new java.awt.Dimension(99, 29));
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 23;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 12);
        openPanel.add(btnOpen, gridBagConstraints);

        generatePanel.setLayout(new java.awt.GridBagLayout());

        btnGenerate.setText("Generate");
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 12);
        generatePanel.add(btnGenerate, gridBagConstraints);

        generateLabel.setText("dasds");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        generatePanel.add(generateLabel, gridBagConstraints);

        outputPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Output"));
        outputPanel.setLayout(new java.awt.GridBagLayout());

        debug.setColumns(20);
        debug.setRows(5);
        jScrollPane1.setViewportView(debug);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 416;
        gridBagConstraints.ipady = 61;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        outputPanel.add(jScrollPane1, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(openPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(generatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(openPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(generatePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        File f = openFile();
        if (f != null) {
            try {
                XMLParser xmlParser;

                xmlParser = this.xmlFactory.newXMLParser(f);

                this.cpn = xmlParser.parse();

                Stats stats = this.cpn.stats();

                this.debug.append("\n");
                this.debug.append(stats.toString());
            } catch (SAXException | IOException | XPathExpressionException | ParserConfigurationException ex) {
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            this.debug.append("[Error] \n");
        }

    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed

        try {
            XMLBuilder xmlBuilder = this.xmlFactory.newXMLBuilder();

            int returnVal = this.saveFile.showSaveDialog(this);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                xmlBuilder.construct(this.saveFile.getSelectedFile(),this.cpn);
                this.generateLabel.setText("Saved file: " + this.saveFile.getSelectedFile().getAbsolutePath());
                this.debug.append("\n[SUCCESS] File generated successfully");
            }
        } catch (ParserConfigurationException | TransformerException | IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private File openFile() {

        File file = null;

        FileFilter f = new FileFilter() {

            @Override
            public boolean accept(File pathname) {
                return pathname.getName().endsWith(".xml");
            }

            @Override
            public String getDescription() {
                return "XML Files";
            }
        };

        openFile.addChoosableFileFilter(f);
        openFile.setFileFilter(f);
        int returnVal = openFile.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            file = openFile.getSelectedFile();
            openLabel.setText("Opened file: " + file.getAbsolutePath());
            this.debug.append("[SUCCESS] File opened successfully!\n");
            this.btnGenerate.setEnabled(true);
        }

        return file;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnOpen;
    private javax.swing.JTextArea debug;
    private javax.swing.JLabel generateLabel;
    private javax.swing.JPanel generatePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFileChooser openFile;
    private javax.swing.JLabel openLabel;
    private javax.swing.JPanel openPanel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JFileChooser saveFile;
    // End of variables declaration//GEN-END:variables
}
